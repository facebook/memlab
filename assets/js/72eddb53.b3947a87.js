"use strict";(self.webpackChunkmemlab_website=self.webpackChunkmemlab_website||[]).push([[7153],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=n.createContext({}),p=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,s=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(a),h=l,d=u["".concat(o,".").concat(h)]||u[h]||m[h]||s;return a?n.createElement(d,r(r({ref:t},c),{},{components:a})):n.createElement(d,r({ref:t},c))}));function h(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var s=a.length,r=new Array(s);r[0]=u;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:l,r[1]=i;for(var p=2;p<s;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7835:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=a(7462),l=(a(7294),a(3905));const s={id:"heap_analysis_src.ObjectShallowAnalysis",title:"Class: ObjectShallowAnalysis",sidebar_label:"ObjectShallowAnalysis",custom_edit_url:null},r=void 0,i={unversionedId:"api/classes/heap_analysis_src.ObjectShallowAnalysis",id:"api/classes/heap_analysis_src.ObjectShallowAnalysis",title:"Class: ObjectShallowAnalysis",description:"Hierarchy",source:"@site/docs/api/classes/heap_analysis_src.ObjectShallowAnalysis.md",sourceDirName:"api/classes",slug:"/api/classes/heap_analysis_src.ObjectShallowAnalysis",permalink:"/memlab/docs/api/classes/heap_analysis_src.ObjectShallowAnalysis",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"heap_analysis_src.ObjectShallowAnalysis",title:"Class: ObjectShallowAnalysis",sidebar_label:"ObjectShallowAnalysis",custom_edit_url:null},sidebar:"sidebar",previous:{title:"ObjectFanoutAnalysis",permalink:"/memlab/docs/api/classes/heap_analysis_src.ObjectFanoutAnalysis"},next:{title:"ObjectShapeAnalysis",permalink:"/memlab/docs/api/classes/heap_analysis_src.ObjectShapeAnalysis"}},o={},p=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Constructors",id:"constructors",level:2},{value:'<a id="new objectshallowanalysis"></a><strong>new ObjectShallowAnalysis</strong>()',id:"new-objectshallowanalysis",level:3},{value:"Methods",id:"methods",level:2},{value:'<a id="analyzesnapshotfromfile"></a><strong>analyzeSnapshotFromFile</strong>(<code>file</code>)',id:"analyzesnapshotfromfilefile",level:3},{value:'<a id="getcommandname"></a><strong>getCommandName</strong>()',id:"getcommandname",level:3},{value:'<a id="gettopduplicatedobjectincount"></a><strong>getTopDuplicatedObjectInCount</strong>()',id:"gettopduplicatedobjectincount",level:3}],c={toc:p};function m(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("a",{parentName:"p",href:"/memlab/docs/api/classes/heap_analysis_src.BaseAnalysis"},(0,l.kt)("inlineCode",{parentName:"a"},"BaseAnalysis"))),(0,l.kt)("p",{parentName:"li"},"\u21b3 ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"ObjectShallowAnalysis"))))),(0,l.kt)("h2",{id:"constructors"},"Constructors"),(0,l.kt)("h3",{id:"new-objectshallowanalysis"},(0,l.kt)("a",{id:"new objectshallowanalysis"}),(0,l.kt)("strong",{parentName:"h3"},"new ObjectShallowAnalysis"),"()"),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("h3",{id:"analyzesnapshotfromfilefile"},(0,l.kt)("a",{id:"analyzesnapshotfromfile"}),(0,l.kt)("strong",{parentName:"h3"},"analyzeSnapshotFromFile"),"(",(0,l.kt)("inlineCode",{parentName:"h3"},"file"),")"),(0,l.kt)("p",null,"Run heap analysis for a single heap snapshot file"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Parameters"),":",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"file"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"string")," | the absolute path of a ",(0,l.kt)("inlineCode",{parentName:"li"},".heapsnapshot")," file."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Returns"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"Promise"),"<",(0,l.kt)("inlineCode",{parentName:"li"},"void"),">"," | this API returns void. To get the analysis results,\ncheck out the documentation of the hosting heap analysis class and\ncall the analysis-specific API to get results after calling this method."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Example"),":")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"const analysis = new StringAnalysis();\nawait anaysis.analyzeSnapshotFromFile(snapshotFile);\nconst stringPatterns = analysis.getTopDuplicatedStringsInCount();\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Source"),":",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/facebookincubator/memlab/blob/9262b35/packages/heap-analysis/src/BaseAnalysis.ts#L75"},"heap-analysis/src/BaseAnalysis.ts:75"))))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"getcommandname"},(0,l.kt)("a",{id:"getcommandname"}),(0,l.kt)("strong",{parentName:"h3"},"getCommandName"),"()"),(0,l.kt)("p",null,"get CLI command name for this memory analysis;\nuse it with ",(0,l.kt)("inlineCode",{parentName:"p"},"memlab analyze <ANALYSIS_NAME>")," in CLI"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")," | command name")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Source"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/facebookincubator/memlab/blob/9262b35/packages/heap-analysis/src/plugins/ObjectShallowAnalysis.ts#L65"},"heap-analysis/src/plugins/ObjectShallowAnalysis.ts:65"))))),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"gettopduplicatedobjectincount"},(0,l.kt)("a",{id:"gettopduplicatedobjectincount"}),(0,l.kt)("strong",{parentName:"h3"},"getTopDuplicatedObjectInCount"),"()"),(0,l.kt)("p",null,"get the top duplicated object in terms of duplicated object count"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Returns"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"ObjectRecord"),"[] | an array of the top-duplicated objects' information")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Source"),":"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/facebookincubator/memlab/blob/9262b35/packages/heap-analysis/src/plugins/ObjectShallowAnalysis.ts#L106"},"heap-analysis/src/plugins/ObjectShallowAnalysis.ts:106"))))))}m.isMDXComponent=!0}}]);